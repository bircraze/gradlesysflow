apply from: "../../scripts/gradle/build.flow.global.gradle"

project.ext {
    tpl_example = [
        alias: "mybuild",
        applyfor: /.*(latest).*/,
        steps: [
            sysclean: [
                rootonly: true,
                cmd: "echo",
                subcmd: "",
                args: ["hi", "${prop('hi2')}"]
            ],
            reset: [
                parallel: true,
                subprjs: subPrjs,
                cmd: "git",
                subcmd: "reset",
                args: ["--hard"]
            ],
            checkout: [
                parallel: true,
                cmd: "git",
                subcmd: "checkout",
                args: [":::tag:::"],
                tag: ["master": subPrjs]
            ],
            hook: [
                rootonly: true
            ],
            mytest: [
                parallel: true,
                cmd: "gradle",
                subcmd: "myTask",
                args: ["-Pdummy=${prop('dummy')}", "-Pver=:::ver:::", "-Petc=:::etc:::"],
                ver: ["v9999": subPrjs],
                etc: ["brabrabra": subPrjs]
            ]
        ]
    ]

    tpl_hackexample = deepcopy(tpl_example)
    tpl_hackexample["alias"] = "hackmybuild"
    tpl_hackexample["steps"] = replaceMap(tpl_hackexample["steps"], "hook", myArr.collectEntries { [
            "${it.join("")}build": [
                parallel: true,
                subprjs: it,
                cmd: "git",
                subcmd: "log",
                args: [":::loglv:::"],
                loglv: ["-1": it]
            ]
        ]
    })
}
